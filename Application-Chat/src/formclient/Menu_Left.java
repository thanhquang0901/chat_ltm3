/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package formclient;

import component.Info_User;
import event.EventMenuLeft;
import event.PublicEvent;
import java.awt.Component;
import java.util.ArrayList;
import java.util.List;
import model.Model_User_Account;
import net.miginfocom.swing.MigLayout;
import swing.ScrollBar;

/**
 *
 * @author ADMIN
 */
public class Menu_Left extends javax.swing.JPanel {

    private List<Model_User_Account> userAccount;

    /**
     * Creates new form Menu_Left
     */
    public Menu_Left() {
        initComponents();
        init();
    }

    private void init() {
        jScrollPane1.setVerticalScrollBar(new ScrollBar());
        listuser.setLayout(new MigLayout("fillx", "0[]0", "0[]0"));
        userAccount = new ArrayList<>();
        PublicEvent.getInstance().AddEventMenuLeft(new EventMenuLeft() {
            @Override
            public void newUser(List<Model_User_Account> users) {
                for (Model_User_Account d : users) {
                    userAccount.add(d);
                    listuser.add(new Info_User(d), "wrap");
                    refreshlistuer();
                }
            }

            @Override
            public void userConnect(int id) {
                for (Model_User_Account u : userAccount) {
                    if (u.getId() == id) {
                        u.setStatus(true);
                        PublicEvent.getInstance().getEventMain().updateUser(u);
                        break;
                    }
                }
                if (menuMessage.isSelected()) {
                    for (Component com : menu.getComponents()) {
                        Info_User info = (Info_User) com;
                        if (info.getUser().getId() == id) {
                            info.updateStatus();
                            break;
                        }
                    }
                }
            }

            @Override
            public void userDisconnect(int id) {
                for (Model_User_Account u : userAccount) {
                    if (u.getId() == id) {
                        u.setStatus(false);
                        PublicEvent.getInstance().getEventMain().updateUser(u);
                        break;
                    }
                }
                if (menuMessage.isSelected()) {
                    for (Component com : menu.getComponents()) {
                        Info_User info = (Info_User) com;
                        if (info.getUser().getId() == id) {
                            info.updateStatus();
                            break;
                        }
                    }
                }
            }

        });
        showUser();
    }

    private void showUser() {
        listuser.removeAll();
        for (Model_User_Account d : userAccount) {
            listuser.add(new Info_User(null), "wrap");
        }
        refreshlistuer();
    }

    private void showGroup() {
        listuser.removeAll();
        for (int i = 0; i < 10; i++) {
            listuser.add(new Info_User(null), "wrap");
        }
        refreshlistuer();
    }

    private void showBox() {
        listuser.removeAll();
        for (int i = 0; i < 20; i++) {
            listuser.add(new Info_User(null), "wrap");
        }
        refreshlistuer();
    }

    private void refreshlistuer() {
        listuser.repaint();
        listuser.revalidate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        menu = new javax.swing.JLayeredPane();
        menuMessage = new component.MenuButton();
        menuGroup = new component.MenuButton();
        menuBox = new component.MenuButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        listuser = new javax.swing.JLayeredPane();

        setBackground(java.awt.SystemColor.activeCaption);
        setMaximumSize(new java.awt.Dimension(150, 500));
        setMinimumSize(new java.awt.Dimension(150, 500));
        setPreferredSize(new java.awt.Dimension(150, 500));
        setLayout(null);

        menu.setLayout(new javax.swing.BoxLayout(menu, javax.swing.BoxLayout.LINE_AXIS));

        menuMessage.setIconSelected(new javax.swing.ImageIcon(getClass().getResource("/icon/message_selected.png"))); // NOI18N
        menuMessage.setIconSimple(new javax.swing.ImageIcon(getClass().getResource("/icon/message.png"))); // NOI18N
        menuMessage.setMaximumSize(new java.awt.Dimension(50, 40));
        menuMessage.setMinimumSize(new java.awt.Dimension(50, 40));
        menuMessage.setPreferredSize(new java.awt.Dimension(20, 20));
        menuMessage.setSelected(true);
        menuMessage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuMessageActionPerformed(evt);
            }
        });
        menu.add(menuMessage);

        menuGroup.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/group.png"))); // NOI18N
        menuGroup.setIconSelected(new javax.swing.ImageIcon(getClass().getResource("/icon/group_selected.png"))); // NOI18N
        menuGroup.setIconSimple(new javax.swing.ImageIcon(getClass().getResource("/icon/group.png"))); // NOI18N
        menuGroup.setMaximumSize(new java.awt.Dimension(50, 40));
        menuGroup.setMinimumSize(new java.awt.Dimension(50, 40));
        menuGroup.setPreferredSize(new java.awt.Dimension(20, 20));
        menuGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuGroupActionPerformed(evt);
            }
        });
        menu.add(menuGroup);

        menuBox.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/box.png"))); // NOI18N
        menuBox.setIconSelected(new javax.swing.ImageIcon(getClass().getResource("/icon/box_selected.png"))); // NOI18N
        menuBox.setIconSimple(new javax.swing.ImageIcon(getClass().getResource("/icon/box.png"))); // NOI18N
        menuBox.setMaximumSize(new java.awt.Dimension(50, 40));
        menuBox.setMinimumSize(new java.awt.Dimension(50, 40));
        menuBox.setPreferredSize(new java.awt.Dimension(20, 20));
        menuBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuBoxActionPerformed(evt);
            }
        });
        menu.add(menuBox);

        add(menu);
        menu.setBounds(0, 0, 150, 40);

        jScrollPane1.setBackground(java.awt.SystemColor.activeCaption);
        jScrollPane1.setBorder(null);
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        listuser.setBackground(java.awt.SystemColor.activeCaption);
        listuser.setOpaque(true);

        javax.swing.GroupLayout listuserLayout = new javax.swing.GroupLayout(listuser);
        listuser.setLayout(listuserLayout);
        listuserLayout.setHorizontalGroup(
            listuserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 150, Short.MAX_VALUE)
        );
        listuserLayout.setVerticalGroup(
            listuserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 460, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(listuser);

        add(jScrollPane1);
        jScrollPane1.setBounds(0, 40, 150, 460);
    }// </editor-fold>//GEN-END:initComponents

    private void menuMessageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuMessageActionPerformed
        // TODO add your handling code here:
        if (!menuMessage.isSelected()) {
            menuMessage.setSelected(true);
            menuGroup.setSelected(false);
            menuBox.setSelected(false);
            showUser();
        }
    }//GEN-LAST:event_menuMessageActionPerformed

    private void menuGroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuGroupActionPerformed
        // TODO add your handling code here:
        if (!menuGroup.isSelected()) {
            menuMessage.setSelected(false);
            menuGroup.setSelected(true);
            menuBox.setSelected(false);
            showGroup();
        }
    }//GEN-LAST:event_menuGroupActionPerformed

    private void menuBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuBoxActionPerformed
        // TODO add your handling code here:
        if (!menuBox.isSelected()) {
            menuMessage.setSelected(false);
            menuGroup.setSelected(false);
            menuBox.setSelected(true);
            showBox();
        }
    }//GEN-LAST:event_menuBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLayeredPane listuser;
    private javax.swing.JLayeredPane menu;
    private component.MenuButton menuBox;
    private component.MenuButton menuGroup;
    private component.MenuButton menuMessage;
    // End of variables declaration//GEN-END:variables
}
